/*** Licensed under the KARMA v.1 Law of Sharing. As others have shared freely to you, so shall you share freely back to us.* If you shall try to cheat and find a loophole in this license, then KARMA will exact your share,* and your worldly gain shall come to naught and those who share shall gain eventually above you.* In compliance with previous GPLv2.0 works of Jorg Janke, Low Heng Sin, Carlos Ruiz and contributors.* This Module Creator is an idea put together and coded by Redhuan D. Oon (red1@red1.org)*/package org.bm.process;
import java.math.BigDecimal;import java.util.List;import org.adempiere.exceptions.AdempiereException;import org.bm.model.MBM_OrderManagement;import org.bm.model.MBM_OrderManagementLine;import org.compiere.model.MBPartner;import org.compiere.model.MDocType;import org.compiere.model.MOrder;import org.compiere.model.MOrderLine;import org.compiere.model.MPriceList;import org.compiere.model.MPriceListVersion;import org.compiere.model.Query;import org.compiere.process.ProcessInfoParameter;
import org.compiere.process.SvrProcess;import org.compiere.util.Env;import org.eevolution.model.MPPProductBOM; 

	public class GenerateSalesOrder extends SvrProcess {
		int cnt = 0;	private String DocStatus = "";	private Boolean IsBOM;
	protected void prepare() {
		ProcessInfoParameter[] para = getParameter();
			for (ProcessInfoParameter p:para) {
				String name = p.getParameterName();
				if (p.getParameter() == null)					;
				else if(name.equals("DocStatus"))
					DocStatus = (String)p.getParameter();				else if(name.equals("IsBOM"))					IsBOM = (Boolean)p.getParameterAsBoolean();
			}
	}
	protected String doIt() {
		if (getRecord_ID()<1)			throw new AdempiereException("There is no record to process! ABORT.");		MBM_OrderManagement job = new Query(Env.getCtx(),MBM_OrderManagement.Table_Name,MBM_OrderManagement.COLUMNNAME_BM_OrderManagement_ID+"=?",get_TrxName())				.setParameters(getRecord_ID())				.first();		if (job==null)			throw new AdempiereException("Job not existing! ABORT.");  			MOrder order = null;			if (job.getC_Order_ID()>0){				order = new Query(Env.getCtx(),MOrder.Table_Name,MOrder.COLUMNNAME_C_Order_ID+"=?",get_TrxName())				.setParameters(job.getC_Order_ID())				.first();				if (order==null)					throw new AdempiereException("NOT SUPPOSE TO HAPPEN - Job Sales Order NOT Existing!");			}			else {				order= new MOrder(Env.getCtx(),0,get_TrxName());			}			order.setIsSOTrx(true);			if (job.getC_BPartner_ID()<1)				throw new AdempiereException("Define Customer first");			if (job.getM_PriceList_Version_ID()<1)				throw new AdempiereException("Set Price List Version first");			order.setBPartner((MBPartner) job.getC_BPartner()); 	 		MPriceListVersion version = new Query(getCtx(),MPriceListVersion.Table_Name,MPriceListVersion.COLUMNNAME_M_PriceList_Version_ID+"=?",get_TrxName())					.setParameters(job.getM_PriceList_Version_ID()).first();			MPriceList pricelist = MPriceList.get(getCtx(), version.getM_PriceList_ID(), get_TrxName());			order.setM_PriceList_ID(pricelist.get_ID());			order.setC_DocTypeTarget_ID();			order.setDateOrdered(job.getUpdated());			order.setDatePromised(job.getDatePromised()); 			order.saveEx(get_TrxName());			job.setC_Order_ID(order.getC_Order_ID());			job.save(get_TrxName());						//old Order Lines			List<MOrderLine> oldlines = new Query(Env.getCtx(),MOrderLine.Table_Name,MOrderLine.COLUMNNAME_C_Order_ID+"=?",get_TrxName())					.setParameters(order.get_ID())					.list();			for (MOrderLine oldline:oldlines){				oldline.setQtyOrdered(Env.ZERO);			}			// go thru jobline			List<MBM_OrderManagementLine> lines = new Query(Env.getCtx(),MBM_OrderManagementLine.Table_Name,MBM_OrderManagementLine.COLUMNNAME_BM_OrderManagement_ID+"=?",get_TrxName())					.setParameters(job.get_ID())					.setOrderBy(MBM_OrderManagementLine.COLUMNNAME_M_Product_ID)					.list();						MOrderLine oline = null; 			int prodID = 0; 						BigDecimal OrderedQty = job.getOrderedQty();			for (MBM_OrderManagementLine line:lines){				boolean oldflag = false;				//consolidate to single product line				if ((line.getM_Product_ID()>0 && line.getM_Product_ID()!=prodID) || oline==null){					if (line.getM_Product_ID()>0)						prodID=line.getM_Product_ID();										//check to be non-BOM 					if (IsBOM){						MPPProductBOM bom = new Query(Env.getCtx(),MPPProductBOM.Table_Name,MPPProductBOM.COLUMNNAME_M_Product_ID+"=?",get_TrxName())								.setParameters(prodID)								.first();						if (bom!=null){							line.setC_OrderLine_ID(0);							line.saveEx(get_TrxName());							continue;						}					}//IsBOM										//refresh if it already exist					for (MOrderLine oldline:oldlines){						if (oldline.getM_Product_ID()==prodID){							oline = oldline;							oldflag = true;							break;						}					}					if (oldflag==false){						oline = new MOrderLine(order);						oline.setQty(line.getQtyOrdered());		 				oline.setM_Product_ID(prodID);		 				oline.setC_UOM_ID(line.getM_Product().getC_UOM_ID());					}									} else { 					oline.setQty(oline.getQtyOrdered().add(line.getQtyOrdered()));				}				if (oldflag)					oline.setQty(oline.getQtyOrdered().add(line.getQtyOrdered()));								OrderedQty=OrderedQty.add(line.getQtyOrdered());				oline.setM_AttributeSetInstance_ID(line.getM_AttributeSetInstance_ID());				oline.saveEx(get_TrxName());				line.setC_OrderLine_ID(oline.get_ID());				line.setLineNetAmt(oline.getLineNetAmt());				line.saveEx(get_TrxName());				cnt++;			}			job.setOrderedQty(OrderedQty);			job.saveEx(get_TrxName());			//complete  the Sales Order			if (DocStatus.equals(MOrder.DOCSTATUS_Completed) || DocStatus.equals(MOrder.DOCSTATUS_InProgress))				order.processIt(DocStatus);			order.saveEx(get_TrxName());			job.setGrandTotal(order.getGrandTotal());			job.saveEx(get_TrxName());			return "New Order: "+order.getDocumentNo()+" No. Of Lines: "+cnt;	}

}
